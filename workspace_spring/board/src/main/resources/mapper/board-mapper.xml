<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<!-- namespace에는 xml파일과 연결할 Mapper interface 파일명을 패키지를 포함하여 적어주세요 -->
<mapper namespace="com.green.board.mapper.BoardMapper">
    <!--리스트뿌리기-->
	<select id="selectList" resultType="BoardDTO">
        SELECT BOARD_NUM
        ,TITLE
        ,WRITER
        ,READ_CNT
        ,REG_DATE
        FROM BOARD
        <if test='searchValue != null and !searchValue.equals("")'>
        WHERE ${searchKeword} LIKE CONCAT('%',#{searchValue},'%')
        </if>
        ORDER BY REG_DATE DESC
    </select>
    <!--검색시 보통 하나만 만듬 list or search-->
    <!--검색시 서치 조회 -->
<!--    <select id="searchList" resultType="BoardDTO">-->
<!--        SELECT BOARD_NUM-->
<!--        ,TITLE-->
<!--        ,WRITER-->
<!--        ,READ_CNT-->
<!--        ,REG_DATE-->
<!--        FROM BOARD-->
<!--        WHERE ${searchKeword} LIKE CONCAT('%',#{searchValue},'%')-->
<!--        ORDER BY REG_DATE DESC-->
<!--    </select>-->


    <!--상세보기-->
    <select id="selectDetail" resultType="BoardDTO">
        SELECT BOARD_NUM
        ,TITLE
        ,WRITER
        ,CONTENT
        ,READ_CNT
        ,REG_DATE
        FROM BOARD
        WHERE BOARD_NUM = #{boardNum}
    </select>
<!--     업데이트될때마다 올라가라-->
    <update id="updateCnt">
        UPDATE BOARD
        SET READ_CNT = READ_CNT+1
        WHERE BOARD_NUM = #{boardNum}
    </update>

    <!--검색-->
    <!--글쓰기-->
    <insert id="insertWrite">
        INSERT INTO BOARD (
        TITLE
        ,WRITER
        ,CONTENT
        )
        VALUES(
        #{title}
        ,#{writer}
        ,#{content}
        )
    </insert>
    <!--업데이트-->
    <update id="updateCont">
        UPDATE BOARD
        SET TITLE = #{title}
            ,CONTENT = #{content}
        WHERE BOARD_NUM = #{boardNum}
    </update>
    <!--삭제-->
    <delete id="deleteCont">
        DELETE FROM BOARD
        WHERE BOARD_NUM = #{boardNum}
    </delete>

</mapper>































